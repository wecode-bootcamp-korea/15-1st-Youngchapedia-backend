# Generated by Django 3.1.4 on 2020-12-16 14:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArchiveType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'archivetypes',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'collections',
            },
        ),
        migrations.CreateModel(
            name='CollectionComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField()),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.collection')),
            ],
            options={
                'db_table': 'collection_comments',
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_korean', models.CharField(max_length=100)),
                ('main_photo', models.CharField(max_length=1000)),
                ('release_year', models.IntegerField(default=0, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.category')),
            ],
            options={
                'db_table': 'contents',
            },
        ),
        migrations.CreateModel(
            name='ContentService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'content_services',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Disclosure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'dislosures',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'genres',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'jobs',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'languages',
            },
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'people',
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'relations',
            },
        ),
        migrations.CreateModel(
            name='RelationStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'relation_status',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.content')),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='ReviewComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.review')),
            ],
            options={
                'db_table': 'review_comments',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=50, null=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.content')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.people')),
            ],
            options={
                'db_table': 'staffs',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'subcategories',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=45)),
                ('password', models.CharField(max_length=250)),
                ('profile_image', models.CharField(max_length=1000, null=True)),
                ('user_bio', models.TextField(max_length=300, null=True)),
                ('background_image', models.CharField(max_length=1000, null=True)),
                ('username', models.CharField(max_length=20)),
                ('country', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='user.country')),
                ('disclosure_scope', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='user.disclosure')),
                ('language', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='user.language')),
                ('relations', models.ManyToManyField(through='user.Relation', to='user.User')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='TvProgramOverview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_original', models.CharField(max_length=100)),
                ('broadcast', models.CharField(max_length=45, null=True)),
                ('description', models.TextField(null=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.content')),
            ],
            options={
                'db_table': 'tv_program_overviews',
            },
        ),
        migrations.CreateModel(
            name='StaffJobs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.job')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.staff')),
            ],
            options={
                'db_table': 'staff_jobs',
            },
        ),
        migrations.CreateModel(
            name='ReviewReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
            options={
                'db_table': 'review_reports',
            },
        ),
        migrations.CreateModel(
            name='ReviewLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
            options={
                'db_table': 'review_likes',
            },
        ),
        migrations.CreateModel(
            name='ReviewCommentLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.reviewcomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
            options={
                'db_table': 'review_comment_likes',
            },
        ),
        migrations.AddField(
            model_name='reviewcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user'),
        ),
        migrations.AddField(
            model_name='review',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user'),
        ),
        migrations.AddField(
            model_name='relation',
            name='from_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations_by_from_user', to='user.user'),
        ),
        migrations.AddField(
            model_name='relation',
            name='relation_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.relationstatus'),
        ),
        migrations.AddField(
            model_name='relation',
            name='to_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations_by_to_user', to='user.user'),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(5.0)])),
                ('watch_date', models.DateField(null=True)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating_user', to='user.content')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rated_movie', to='user.user')),
            ],
            options={
                'db_table': 'ratings',
            },
        ),
        migrations.CreateModel(
            name='PeopleJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.job')),
                ('people', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.people')),
            ],
            options={
                'db_table': 'people_jobs',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_status', models.BooleanField()),
                ('request_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_user_id', to='user.user')),
                ('requested_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_user_id', to='user.user')),
            ],
            options={
                'db_table': 'partners',
            },
        ),
        migrations.CreateModel(
            name='MovieOverview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_original', models.CharField(max_length=100)),
                ('runtime', models.IntegerField(default=0, null=True)),
                ('description', models.TextField(max_length=200, null=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.content')),
            ],
            options={
                'db_table': 'movie_overviews',
            },
        ),
        migrations.CreateModel(
            name='ContentTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.content')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.tag')),
            ],
            options={
                'db_table': 'content_tags',
            },
        ),
        migrations.CreateModel(
            name='ContentPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.CharField(max_length=1000)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.content')),
            ],
            options={
                'db_table': 'content_photos',
            },
        ),
        migrations.CreateModel(
            name='ContentGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.content')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.genre')),
            ],
            options={
                'db_table': 'content_genres',
            },
        ),
        migrations.CreateModel(
            name='ContentCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.content')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.country')),
            ],
            options={
                'db_table': 'content_countries',
            },
        ),
        migrations.CreateModel(
            name='ContentCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.collection')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.content')),
            ],
            options={
                'db_table': 'content_collections',
            },
        ),
        migrations.CreateModel(
            name='ContentAvailableService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(null=True)),
                ('link', models.URLField(max_length=1000)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.content')),
                ('content_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.contentservice')),
            ],
            options={
                'db_table': 'contents_available_services',
            },
        ),
        migrations.CreateModel(
            name='CollectionLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.collection')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
            options={
                'db_table': 'collection_likes',
            },
        ),
        migrations.CreateModel(
            name='CollectionCommentLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.TimeField(default=django.utils.timezone.now)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.collectioncomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
            options={
                'db_table': 'collection_comment_likes',
            },
        ),
        migrations.AddField(
            model_name='collectioncomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user'),
        ),
        migrations.AddField(
            model_name='collection',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user'),
        ),
        migrations.CreateModel(
            name='BookOverview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_title', models.CharField(max_length=45)),
                ('page', models.IntegerField(default=0, null=True)),
                ('book_contents', models.TextField(max_length=1000, null=True)),
                ('publisher_introduction', models.TextField(max_length=1000, null=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.content')),
                ('sub_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.subcategory')),
            ],
            options={
                'db_table': 'book_overviews',
            },
        ),
        migrations.CreateModel(
            name='Archive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(verbose_name=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField()),
                ('archive_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.archivetype')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.content')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='archives', to='user.user')),
            ],
            options={
                'db_table': 'archives',
            },
        ),
    ]
